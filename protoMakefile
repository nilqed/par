# *********************
# * protoMakefile     *
# * for Par 1.40      *
# * Copyright 1993 by *
# * Adam M. Costello  *
# *********************


# Define CC so that the command
# $(CC) foo.c
# compiles the ANSI C source file "foo.c" into the object file "foo.o".
# You may assume that foo.c uses no floating point math.
#
# If your operating system or your compiler's exit() function automatically
# frees all memory allocated by malloc() when a process terminates, then you
# can choose to trade away space efficiency for time efficiency by defining
# DONTFREE.
#
# Example (for Solaris 2.2):
# CC = cc -c -O -s -Xc -DDONTFREE

CC =

# Define LINK1 and LINK2 so that the command
# $(LINK1) foo1.o foo2.o foo3.o $(LINK2) foo
# links the object files "foo1.o", "foo2.o", "foo3.o"
# into the executable file "foo".
# You may assume that none of the .o files use floating point math.
#
# Example (for Solaris 2.2):
# LINK1 = cc -s
# LINK2 = -o

LINK1 =
LINK2 =

# Define RM so that the command
# $(RM) foo1 foo2 foo3
# removes the files "foo1", "foo2", and "foo3", and
# preferrably doesn't complain if they don't exist.
#
# Example (for Solaris 2.2):
# RM = rm -f

RM =

# You shouldn't need to modify anything below this line.

OBJS = buffer.o charset.o errmsg.o par.o reformat.o

.c.o:
	$(CC) $<

par: $(OBJS)
	$(LINK1) $(OBJS) $(LINK2) par

buffer.o: buffer.c buffer.h errmsg.h

charset.o: charset.c charset.h errmsg.h buffer.h

errmsg.o: errmsg.c errmsg.h

par.o: par.c charset.h errmsg.h buffer.h reformat.h

reformat.o: reformat.c reformat.h errmsg.h buffer.h

clean:
	$(RM) par $(OBJS)
